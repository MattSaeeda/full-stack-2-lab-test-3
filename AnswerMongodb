1. Write a MongoDB query to display all the documents in the collection restaurants.
db.restaurants.find();


2. Write a MongoDB query to display the fields restaurant_id, name, borough and cuisine for all the documents in the collection restaurant.
db.restaurants.find( {restaurant_id}, {name}, {borough}, {cuisine});


3. Write a MongoDB query to display the fields restaurant_id, name, borough and cuisine, but exclude the field _id for all the documents in the collection restaurant.
db.restaurants.find({"restaurant_id" : 1,"name":1,"borough":1,"cuisine" :1,"_id":0});

4. Write a MongoDB query to display the fields restaurant_id, name, borough and zip code, but exclude the field _id for all the documents in the collection restaurant.
db.restaurants.find({},{"restaurant_id" : 1,"name":1,"borough":1,"zipcode" :1,"_id":0});

5. Write a MongoDB query to display all the restaurant which is in the borough Bronx.
db.restaurants.find({"borough": "Bronx"});


6. Write a MongoDB query to display the first 5 restaurant which is in the borough Bronx.
db.restaurants.find({"borough": "Bronx"}).limit(5);
   

7. Write a MongoDB query to find the restaurants who achieved a score more than 90.
db.restaurants.find({grades : { $elemMatch:{"score":{$gt : 90}}}});

8. Write a MongoDB query to find the restaurants that do not prepare any cuisine of 'American' and their grade score more than 70 and latitude less than -65.754168.
db.restaurants.find( @and [{"cuisine" : {$ne : "American "} , "grades.score" :{$gt : 70} ,
                             "coord": {$lt : -65.754168}]});

9. Write a MongoDB query to find the restaurants which do not prepare any cuisine of 'American' and achieved a score more than 70 and located in the longitude less than -65.754168.
Note : Do this query without using $and operator.

10. Write a MongoDB query to find the restaurants which do not prepare any cuisine of 'American ' and achieved a grade point 'A' not belongs to the borough Brooklyn. The document must be displayed according to the cuisine in descending order.
db.restaurants.find( @and [{"cuisine" : {$ne : "American "} , "grades.grade" :{$eq : A} ,
                             "borough: {$not : Brooklyn}]}).sort(cuisine : -1);

11. Write a MongoDB query to find the restaurants which belong to the borough Bronx and prepared either American or Chinese dish.
db.restaurant.find( {
    $and : [ borough : Bronx
        { $or : [ { cuisine : American }, { cuisine : chinese } ] },]
} )

12. Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those restaurants which belong to the borough Staten Island or Queens or Bronxor Brooklyn.
db.restaurants.find( {{restaurant_id}, {name}, {borough}, {cuisine}} , $and : [ $or {borough : Staten Island)} , {borough : Queens} , {borough : bronx}, {borough : Brooklyn};
